name: Break Tracker CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  api:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    defaults:
      run:
        shell: bash

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Setup Node 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Verify lockfiles exist
        run: |
          test -f backend/package-lock.json || (echo "MISSING backend/package-lock.json" && exit 1)
          test -f frontend/package-lock.json || (echo "MISSING frontend/package-lock.json" && exit 1)

      # ---------- Frontend: install + build ----------
      - name: Install frontend deps
        working-directory: frontend
        run: npm ci --no-audit --no-fund

      - name: Build frontend (Vite)
        working-directory: frontend
        env:
          VITE_API_URL: http://localhost:3001
        run: npm run build

      - name: Stage UI into backend/public
        run: |
          rm -rf backend/public
          mkdir -p backend/public
          cp -R frontend/dist/* backend/public/

      - name: Verify staged UI exists
        run: |
          echo "== backend/public =="
          ls -la backend/public || true
          test -f backend/public/index.html || (echo "index.html missing in backend/public" >&2; exit 1)

      # ---------- Backend: install + start ----------
      - name: Install backend deps
        working-directory: backend
        run: npm ci --no-audit --no-fund

      - name: Show backend package.json head
        run: |
          echo "== backend/package.json =="
          sed -n '1,120p' backend/package.json || true

      - name: Start backend (background) and wait for health
        run: |
          set -e
          node --trace-uncaught --trace-warnings backend/server.js > server.out 2> server.err & echo $! > server.pid

          for i in {1..40}; do
            if curl -fsS http://localhost:3001/api/health > /dev/null; then
              echo "API is up"
              exit 0
            fi
            if ! kill -0 $(cat server.pid) 2>/dev/null; then
              echo "API process exited early"
              echo "--- server.out ---"; tail -n +200 server.out || true
              echo "--- server.err ---"; tail -n +200 server.err || true
              exit 1
            fi
            sleep 0.5
          done
          echo "API did not become healthy in time"
          echo "--- server.out ---"; tail -n +200 server.out || true
          echo "--- server.err ---"; tail -n +200 server.err || true
          exit 1

      # ---------- Smoke checks ----------
      - name: Smoke check UI via backend
        run: |
          curl -fsSI http://localhost:3001/ | tee /tmp/hdrs
          grep -Eiq '^HTTP/1\.[01] 200' /tmp/hdrs || (echo "Expected 200 from /" >&2; exit 1)
          curl -fsS http://localhost:3001/ | head -n 60 | tee /tmp/ui.html
          grep -qi "<html" /tmp/ui.html || (echo "Did not get HTML from /" >&2; exit 1)

      # ---------- Teardown & logs ----------
      - name: Stop backend
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill -9 $(cat server.pid) || true
          fi

      - name: Upload backend logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-logs
          path: |
            server.out
            server.err
          if-no-files-found: ignore
